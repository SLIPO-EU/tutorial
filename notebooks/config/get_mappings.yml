URI:                                     ##SLIPO-specific constraint: Specifies a URI of each POI; If needed, extra attribute "DATA_SOURCE" is used for constructing these URIs                
  entity: uri
  generateWith: getUUID(DATA_SOURCE,OBJECTID)
OBJECTID:
  partOf: sourceInfo
  entity: source
  predicate: slipo:poiRef
DATA_SOURCE:                      ##SLIPO-specific constraint: Specifies the data source provider of each POI; Assuming that extra attribute "DATA_SOURCE" generated by TripleGeo is always used for constructing the URIs for data sources
  partOf: sourceInfo
  entity: source
  predicate: slipo:sourceRef
  generateWith: getDataSource     ##Function call to fill-in this value that does NOT exist in the original dataset
CATEGORY_URI:                     ##SLIPO-specific constraint: Specifies the URI for the category assigned to each POI; Assuming that extra attribute "CATEGORY_URI" generated by TripleGeo is always used for constructing the URIs for categories
  entity: category
  predicate: slipo:category
  datatype: uri
ASSIGNED_CATEGORY:                 ##SLIPO-specific constraint: Specifies an internal category assigned to each POI; Assuming that a mapping to a default (embedded) classification scheme
  entity: assignedCategory
  predicate: slipo:assignedCategory
  generateWith: getEmbeddedCategory
NAME_GR:
  instanceOf: name
  entity: name
  predicate: slipo:name
  type: official
  language: el
TRANSLIT:
  instanceOf: name
  entity: translit_name
  predicate: slipo:name
  type: transliterated
  language: en
  generateWith: getTransliteration(NAME_GR)         ##Function call to fill-in this value that does NOT exist in the original dataset 
NAME_ENG:
  instanceOf: name
  entity: int_name
  predicate: slipo:name
  type: international
  language: en
ADDR_GR:
  partOf: address
  entity: address
  predicate: slipo:street
  language: el
ADDR_ENG:
  partOf: address
  entity: address
  predicate: slipo:street
  language: en
ADD_NUMB:
  partOf: address
  entity: address
  predicate: slipo:number
TK:
  partOf: address
  entity: address
  predicate: slipo:postcode
PHONE:
  instanceOf: contact
  entity: phone
  predicate: slipo:phone
  type: phone
EMAIL:
  instanceOf: contact
  entity: email
  predicate: slipo:email
  type: email
FAX:
  instanceOf: contact
  entity: fax
  predicate: slipo:fax
  type: fax
WEBSITE:
  entity: homepage
  predicate: slipo:homepage
  datatype: uri
LONGITUDE:
  entity: lon
  predicate: wgs84_pos:long
  datatype: float
  generateWith: geometry.getLongitude           ##Function call to fill-in this value that does NOT exist in the original dataset
LATITUDE:
  entity: lat
  predicate: wgs84_pos:lat
  datatype: float
  generateWith: geometry.getLatitude            ##Function call to fill-in this value that does NOT exist in the original dataset